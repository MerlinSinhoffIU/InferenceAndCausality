# Import necessary packages
import networkx as nx
import matplotlib.pyplot as plt

# Define the directed graph
G = nx.DiGraph()

# Add nodes with abbreviations
nodes = {
    'G': 'Genetic Predisposition (G)',
    'S': 'Socioeconomic Status (S)',
    'E': 'Environmental Exposure (E)',
    'X': 'Smoking (X)',
    'Y': 'Lung Cancer (Y)'
}
G.add_nodes_from(nodes.keys())

# Add directed edges representing causal influences
edges = [
    ('G', 'X'),
    ('G', 'Y'),
    ('S', 'X'),
    ('S', 'Y'),
    ('E', 'X'),
    ('E', 'Y'),
    ('X', 'Y')
]
G.add_edges_from(edges)

# Define node positions for plotting
pos = {
    'G': (-1, 1),
    'S': (-1, 0),
    'E': (-1, -1),
    'X': (0, 0),
    'Y': (1, 0)
}

# Create the plot
plt.figure(figsize=(10, 6))
nx.draw(G, pos, with_labels=False, node_size=3000, node_color='lightblue', arrows=True)

# Draw variable names inside the nodes (G, S, E, X, Y)
nx.draw_networkx_labels(G, pos, labels={n: n for n in G.nodes()}, font_size=10, font_weight='bold')

# Add descriptive labels beneath each node
offset = -0.15  # Vertical offset for text placement
for node, (x, y) in pos.items():
    plt.text(x, y + offset, nodes[node], fontsize=9, ha='center')

# Final plot settings
plt.title("Causal DAG: Smoking and Lung Cancer with Confounders")
plt.axis('off')
plt.tight_layout()
